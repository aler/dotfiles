" Example Vim configuration.
" Copy or symlink to ~/.vimrc or ~/_vimrc.

" init pathogen plugin
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

set nocompatible                  " Must come first because it changes other options.

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Auto create hidden buffers (no bang needed)

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.

" Store temporary files in a central spot
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

set listchars=tab:▸\ ,eol:¬        " Use the same symbols as TextMate for tabstops and EOLs

set tabstop=2                    " Specify the width of the tab character
set expandtab                    " Use spaces instead of tabs
set softtabstop=2                " How many spaces inserted when hit tab in insert mode
set shiftwidth=2                 " How many spaces inserted using indentation commands in normal mode

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

set wildignore+=node_modules/**,.git

" Or use vividchalk
colorscheme blackboard

" Remap leader to ,
let mapleader = ","

" autosave all when focus lost
:au FocusLost * :wa

" Source the vimrc file after saving it
if has("autocmd")
    autocmd bufwritepost .vimrc source $MYVIMRC
endif
" Open vimrc file
map <leader>v :tabedit $MYVIMRC<CR>

" Window mappings
map <leader>ww <C-w>w
map <leader>wo <C-w>o
map <leader>f  <C-^>

" Toggle invisibles on/off
map <leader>l :set list!<cr>

" CoffeeScript mappings
" autocmd BufWritePost *.coffee silent CoffeeMake! -b | cwindow
nmap <leader>cm :w\|:CoffeeMake!<cr>
nmap <leader>cr :w\|:CoffeeRun<cr>
nmap <leader>cc :w\|:CoffeeCompile<cr>

" Snipmate setting the author var
let g:snips_author = 'Alex Rudyk <alex.rudyk@gmail.com>'
" Shortcut for reloading snippets, useful when developing
nnoremap <leader>smr <esc>:exec ReloadAllSnippets()<cr>

" Remap the tab key to do autocompletion or indentation depending on the
" context (from http://www.vim.org/tips/tip.php?tip_id=102)
function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

if has('unix')
   let g:ackprg="ack-grep -H --nocolor --nogroup --column"
endif


" Controversial...swap colon and semicolon for easier commands
" nnoremap ; :
" nnoremap : ;
" 
" vnoremap ; :
" vnoremap : ;

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2
